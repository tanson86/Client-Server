{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/client.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div id='parent' style='width: 100%;text-align:center;background-color: lightcoral;'>\\n<div id='child' style='width:50%; margin:0px auto;'>Welcome to Marlabs system.</div>\\n<br>\\n<br>\\n<div style=\\\"background-color: lightgray;\\\">\\n<br>We would like to confirm that we are interacting with a human. Can we proceed with the confirmation.\\n<br>\\n<button  (click)=\\\"findDigits();\\\">Yes</button>\\n</div>\\n\\n\\n\\n\\n<div *ngIf=\\\"client?.digits?.length > 0 && !client?.success\\\">What is the sum of <span style=\\\"background-color: aqua;\\\">{{num}}</span>\\n\\n  <input type=\\\"number\\\" [(ngModel)]=\\\"client.sum\\\">\\n  <button (click)=\\\"sendSum();\\\">Submit</button> <span style=\\\"background-color: red;\\\" *ngIf=\\\"this.errorMessage\\\">{{this.errorMessage}}</span>\\n</div>\\n\\n\\n<div *ngIf=\\\"client?.success\\\"><span style=\\\"background-color: green;\\\">Hurrah!!!You are a human</span>\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { Client } from './client';\nimport { ClientService } from './client.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n  client: Client;\n  errorMessage: any;\n  num:any;\n  constructor(private cs: ClientService){}\n\n  findDigits(){\n    this.cs.findRandomdigits().subscribe(\n      client => {\n        this.client = client;\n        this.num = this.client.digits.join('         ');\n        console.log('this.client '+ JSON.stringify(this.client));\n      },\n      error => this.errorMessage = <any> error\n    )\n  }\n\n  sendSum(){\n    this.cs.sendSum(this.client).subscribe(\n      client => {\n        this.client = client;\n        this.errorMessage = null;\n        console.log('this.client '+ JSON.stringify(this.client));\n      },\n      error => {\n        //this.client = client;\n        this.errorMessage = null;\n        console.log('this.error '+ JSON.stringify(this.client));\n        if(!this.client.success){\n          this.errorMessage = 'The sum is not correct!!! Please try again';\n        }\n      }\n    )\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport {FormsModule} from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { ClientService } from './client.service';\n\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [ClientService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '../../node_modules/@angular/common/http';\nimport { tap } from 'rxjs/operators';\nimport { Observable } from '../../node_modules/rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\nimport { Client } from './client';\n\n\n@Injectable()\nexport class ClientService {\n\n  constructor(private http: HttpClient) { }\n\n  findRandomdigits(): Observable<Client>{\n    return this.http.get<Client>('/findDigitsToSum');\n  }\n\n  sendSum(client:Client): Observable<Client>{\n    return this.http.post<Client>('/verifySum', client);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/client.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}